using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using WebAPI.Models;

namespace WebAPI.DataAccessLayer
{
    public class TagAdder
    {
        public static object AddTagForPerson(string valueFromClient)
        {
            return new PersonAndTag(valueFromClient).Add();
        }
        
        public static bool DeleteTagForPerson(string valueFromClient)
        {
            return new PersonAndTag(valueFromClient).Delete();
        }
    }

    class PersonAndTag
    {
        private PersonAndText personAndText;
        private long tagPrime;
        private bool isValid;

        // valueFromClient willbe the form "misparIshi tagToAdd".
        // Returns true if successful.
        public PersonAndTag(string valueFromClient)
        {
            this.personAndText = new PersonAndText(valueFromClient);
            if (!this.personAndText.isValid)
            {
                this.isValid = false;
                return;
            }
            
            if (!CurrentMisparIshi.IsCurrentUserOrAdmin(
                personAndText.personFromDb.MisparIshi))
            {
                this.isValid = false;
                return;
            }
            
            var tag = this.personAndText.text;
            if (!TagToPrimeDictionary.TAG_TO_PRIME.ContainsKey(tag))
            {
                this.isValid = false;
                return;
            }
            
            this.tagPrime = TagToPrimeDictionary.TAG_TO_PRIME[tag];
            this.isValid = true;
        }

        public object Add()
        {
            if (!this.isValid || tagAlreadyExists())
            {
                return false;
            }
            this.personAndText.personFromDb.Tags *= tagPrime;
            this.personAndText.submitChanges();
            return TagToPrimeDictionary.PRIME_TO_TAG[tagPrime].ToJson();
        }

        public bool Delete()
        {
            if (!this.isValid || !tagAlreadyExists())
            {
                return false;
            }
            personAndText.personFromDb.Tags /= tagPrime;
            this.personAndText.submitChanges();
            return true;
        }

        private bool tagAlreadyExists()
        {
            return personAndText.personFromDb.Tags % tagPrime == 0;
        }
    }
}